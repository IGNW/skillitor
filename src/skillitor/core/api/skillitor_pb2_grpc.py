# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

from skillitor.core.api import skillitor_pb2 as skillitor_dot_core_dot_api_dot_skillitor__pb2


class SkillitorQueryStub(object):
  """This query service should be accepted by both the core and datastore(s)
  """

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.SetSkill = channel.unary_unary(
        '/SkillitorQuery/SetSkill',
        request_serializer=skillitor_dot_core_dot_api_dot_skillitor__pb2.SkillAssociation.SerializeToString,
        response_deserializer=skillitor_dot_core_dot_api_dot_skillitor__pb2.Acknowledgement.FromString,
        )
    self.UnsetSkill = channel.unary_unary(
        '/SkillitorQuery/UnsetSkill',
        request_serializer=skillitor_dot_core_dot_api_dot_skillitor__pb2.SkillAssociation.SerializeToString,
        response_deserializer=skillitor_dot_core_dot_api_dot_skillitor__pb2.Acknowledgement.FromString,
        )
    self.FindSkill = channel.unary_stream(
        '/SkillitorQuery/FindSkill',
        request_serializer=skillitor_dot_core_dot_api_dot_skillitor__pb2.SkillSpec.SerializeToString,
        response_deserializer=skillitor_dot_core_dot_api_dot_skillitor__pb2.SkillAssociation.FromString,
        )


class SkillitorQueryServicer(object):
  """This query service should be accepted by both the core and datastore(s)
  """

  def SetSkill(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def UnsetSkill(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def FindSkill(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_SkillitorQueryServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'SetSkill': grpc.unary_unary_rpc_method_handler(
          servicer.SetSkill,
          request_deserializer=skillitor_dot_core_dot_api_dot_skillitor__pb2.SkillAssociation.FromString,
          response_serializer=skillitor_dot_core_dot_api_dot_skillitor__pb2.Acknowledgement.SerializeToString,
      ),
      'UnsetSkill': grpc.unary_unary_rpc_method_handler(
          servicer.UnsetSkill,
          request_deserializer=skillitor_dot_core_dot_api_dot_skillitor__pb2.SkillAssociation.FromString,
          response_serializer=skillitor_dot_core_dot_api_dot_skillitor__pb2.Acknowledgement.SerializeToString,
      ),
      'FindSkill': grpc.unary_stream_rpc_method_handler(
          servicer.FindSkill,
          request_deserializer=skillitor_dot_core_dot_api_dot_skillitor__pb2.SkillSpec.FromString,
          response_serializer=skillitor_dot_core_dot_api_dot_skillitor__pb2.SkillAssociation.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'SkillitorQuery', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))


class SkillitorRegistrarStub(object):
  """We need a way to register services to the core.
  """

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.Register = channel.unary_unary(
        '/SkillitorRegistrar/Register',
        request_serializer=skillitor_dot_core_dot_api_dot_skillitor__pb2.Registration.SerializeToString,
        response_deserializer=skillitor_dot_core_dot_api_dot_skillitor__pb2.Acknowledgement.FromString,
        )


class SkillitorRegistrarServicer(object):
  """We need a way to register services to the core.
  """

  def Register(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_SkillitorRegistrarServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'Register': grpc.unary_unary_rpc_method_handler(
          servicer.Register,
          request_deserializer=skillitor_dot_core_dot_api_dot_skillitor__pb2.Registration.FromString,
          response_serializer=skillitor_dot_core_dot_api_dot_skillitor__pb2.Acknowledgement.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'SkillitorRegistrar', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
